// <auto-generated />
using System;
using GazServiz.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GazServiz.Data.Migrations
{
    [DbContext(typeof(GarageDbContext))]
    [Migration("20190306192321_ChangeId")]
    partial class ChangeId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GazServiz.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LicensePlate")
                        .IsRequired();

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<int>("OwnerId");

                    b.Property<double>("TotalMillage");

                    b.HasKey("CarId");

                    b.HasAlternateKey("LicensePlate");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            LicensePlate = "SA9999AV",
                            Model = "Mercedess C200",
                            OwnerId = 2,
                            TotalMillage = 59123.120000000003
                        },
                        new
                        {
                            CarId = 2,
                            LicensePlate = "PP1010AA",
                            Model = "Honda Accord",
                            OwnerId = 1,
                            TotalMillage = 100000.0
                        },
                        new
                        {
                            CarId = 3,
                            LicensePlate = "A3129SA",
                            Model = "VW GOLF",
                            OwnerId = 6,
                            TotalMillage = 432432.90999999997
                        },
                        new
                        {
                            CarId = 4,
                            LicensePlate = "SA1111SA",
                            Model = "Fiat Panda",
                            OwnerId = 5,
                            TotalMillage = 1000.01
                        },
                        new
                        {
                            CarId = 5,
                            LicensePlate = "ST2959AS",
                            Model = "Peguo 350",
                            OwnerId = 2,
                            TotalMillage = 102333.0
                        },
                        new
                        {
                            CarId = 6,
                            LicensePlate = "SA8999SA",
                            Model = "Audi RS",
                            OwnerId = 3,
                            TotalMillage = 500.0
                        },
                        new
                        {
                            CarId = 7,
                            LicensePlate = "RU1010RU",
                            Model = "Trabant",
                            OwnerId = 6,
                            TotalMillage = 300000.0
                        },
                        new
                        {
                            CarId = 8,
                            LicensePlate = "СА7845АА",
                            Model = "Fiat Bravo",
                            OwnerId = 3,
                            TotalMillage = 100002.12
                        },
                        new
                        {
                            CarId = 9,
                            LicensePlate = "Б3288ББ",
                            Model = "BMW M6",
                            OwnerId = 4,
                            TotalMillage = 10.199
                        },
                        new
                        {
                            CarId = 10,
                            LicensePlate = "А1123АС",
                            Model = "БМВ М3",
                            OwnerId = 2,
                            TotalMillage = 199999.0
                        },
                        new
                        {
                            CarId = 11,
                            LicensePlate = "CA4341AA",
                            Model = "Mercedess Smart",
                            OwnerId = 2,
                            TotalMillage = 9123.1200000000008
                        });
                });

            modelBuilder.Entity("GazServiz.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(true);

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("Windows");

                    b.HasKey("EmployeeId");

                    b.ToTable("Emoloyees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Name = "Bat Pesho",
                            Speciality = "GearBox"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Name = "Boiko Borisov",
                            Speciality = "Windows"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Name = "Moni Todorov",
                            Speciality = "Brakes"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Name = "Petar Petrov",
                            Speciality = "SafetyComponents"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Name = "Mishelin Georgiev",
                            Speciality = "Tyres"
                        },
                        new
                        {
                            EmployeeId = 6,
                            Name = "Bai Ivan",
                            Speciality = "Engine"
                        });
                });

            modelBuilder.Entity("GazServiz.Models.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("MiddleName");

                    b.Property<string>("Mobile")
                        .IsRequired();

                    b.HasKey("OwnerId");

                    b.HasAlternateKey("Mobile");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            OwnerId = 101,
                            FirstName = "George",
                            LastName = "Lukas",
                            Mobile = "089877321"
                        },
                        new
                        {
                            OwnerId = 2,
                            FirstName = "Michael",
                            LastName = "Carric",
                            Mobile = "004410201020"
                        },
                        new
                        {
                            OwnerId = 3,
                            FirstName = "Wayne",
                            LastName = "Rooney",
                            Mobile = "004410102099"
                        },
                        new
                        {
                            OwnerId = 4,
                            FirstName = "Eric",
                            LastName = "Cantona",
                            Mobile = "+3590828219"
                        },
                        new
                        {
                            OwnerId = 5,
                            FirstName = "Benito",
                            LastName = "Musolini",
                            Mobile = "003421219192"
                        },
                        new
                        {
                            OwnerId = 6,
                            FirstName = "Vladimir",
                            LastName = "Lenin",
                            Mobile = "0895555232"
                        });
                });

            modelBuilder.Entity("GazServiz.Models.Repair", b =>
                {
                    b.Property<int>("RepairId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bill");

                    b.Property<int>("CarId");

                    b.Property<DateTime>("DateIn");

                    b.Property<DateTime?>("DateOut");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("IsFixed")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 4)))
                        .HasDefaultValue("Nope");

                    b.Property<string>("ProblemDescription")
                        .HasMaxLength(1000)
                        .IsUnicode(true);

                    b.HasKey("RepairId");

                    b.HasIndex("CarId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Repairs");

                    b.HasData(
                        new
                        {
                            RepairId = 1,
                            CarId = 1,
                            DateIn = new DateTime(2019, 3, 6, 21, 23, 17, 691, DateTimeKind.Local).AddTicks(2417),
                            EmployeeId = 5,
                            IsFixed = "Nope",
                            ProblemDescription = "Смяна на спукана гума!"
                        },
                        new
                        {
                            RepairId = 2,
                            CarId = 4,
                            DateIn = new DateTime(2019, 3, 6, 21, 23, 17, 699, DateTimeKind.Local).AddTicks(5881),
                            EmployeeId = 2,
                            IsFixed = "Nope",
                            ProblemDescription = "Десният прозорец не се отваря"
                        },
                        new
                        {
                            RepairId = 3,
                            CarId = 2,
                            DateIn = new DateTime(2019, 3, 6, 21, 23, 17, 699, DateTimeKind.Local).AddTicks(5943),
                            EmployeeId = 1,
                            IsFixed = "Nope",
                            ProblemDescription = "Смяна Масло на скоростна кутия"
                        },
                        new
                        {
                            RepairId = 4,
                            CarId = 11,
                            DateIn = new DateTime(2019, 3, 6, 21, 23, 17, 699, DateTimeKind.Local).AddTicks(5953),
                            EmployeeId = 3,
                            IsFixed = "Nope",
                            ProblemDescription = "Изхабени предни накладки"
                        },
                        new
                        {
                            RepairId = 5,
                            CarId = 8,
                            DateIn = new DateTime(2019, 3, 6, 21, 23, 17, 699, DateTimeKind.Local).AddTicks(5963),
                            EmployeeId = 6,
                            IsFixed = "Nope",
                            ProblemDescription = "Тунинг"
                        },
                        new
                        {
                            RepairId = 6,
                            CarId = 7,
                            DateIn = new DateTime(2019, 3, 6, 21, 23, 17, 699, DateTimeKind.Local).AddTicks(5968),
                            EmployeeId = 4,
                            IsFixed = "Nope",
                            ProblemDescription = "Годишен преглед"
                        });
                });

            modelBuilder.Entity("GazServiz.Models.Car", b =>
                {
                    b.HasOne("GazServiz.Models.Owner", "Owner")
                        .WithMany("Cars")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GazServiz.Models.Repair", b =>
                {
                    b.HasOne("GazServiz.Models.Car", "Car")
                        .WithMany("Repairs")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GazServiz.Models.Employee", "Employee")
                        .WithMany("Repairs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
