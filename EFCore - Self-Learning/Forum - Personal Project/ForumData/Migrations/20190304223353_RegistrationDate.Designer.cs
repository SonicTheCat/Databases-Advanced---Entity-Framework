// <auto-generated />
using System;
using ForumData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ForumData.Migrations
{
    [DbContext(typeof(ForumDbContext))]
    [Migration("20190304223353_RegistrationDate")]
    partial class RegistrationDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ForumModels.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Music"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Infromation"
                        });
                });

            modelBuilder.Entity("ForumModels.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CommentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<int>("PostId");

                    b.HasKey("CommentId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            AuthorId = 2,
                            Content = "tam sam!",
                            PostId = 1
                        },
                        new
                        {
                            CommentId = 2,
                            AuthorId = 5,
                            Content = "qko heit...",
                            PostId = 1
                        },
                        new
                        {
                            CommentId = 3,
                            AuthorId = 1,
                            Content = "kolko struva ?",
                            PostId = 1
                        },
                        new
                        {
                            CommentId = 4,
                            AuthorId = 3,
                            Content = "bez pari e we, kaltak ! Teaser",
                            PostId = 1
                        });
                });

            modelBuilder.Entity("ForumModels.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PostID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(true);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("PostId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            AuthorId = 1,
                            CategoryId = 2,
                            Content = "Please read this message till the end! blq blq blq...",
                            Title = "New Privacy Policy in FB"
                        },
                        new
                        {
                            PostId = 2,
                            AuthorId = 3,
                            CategoryId = 1,
                            Content = "Listen to my brand new single - 'Самотни лелки' ",
                            Title = "!!!NEW SINGLE!!!"
                        },
                        new
                        {
                            PostId = 3,
                            AuthorId = 4,
                            CategoryId = 1,
                            Content = "Примата на българската естрада организира грандиозен конц...",
                            Title = "300 Години на Сцена"
                        });
                });

            modelBuilder.Entity("ForumModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Status")
                        .HasMaxLength(32)
                        .IsUnicode(true);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(true);

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Status = "Top User",
                            Username = "Mark Zukenberg"
                        },
                        new
                        {
                            UserId = 2,
                            Status = "New",
                            Username = "Jay-Z"
                        },
                        new
                        {
                            UserId = 3,
                            Status = "Star",
                            Username = "Beyonce"
                        },
                        new
                        {
                            UserId = 4,
                            Status = "Vintage",
                            Username = "Lili Ivanova"
                        },
                        new
                        {
                            UserId = 5,
                            Status = "Unknown",
                            Username = "Kichka Bodurova"
                        });
                });

            modelBuilder.Entity("ForumModels.Comment", b =>
                {
                    b.HasOne("ForumModels.User", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForumModels.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ForumModels.Post", b =>
                {
                    b.HasOne("ForumModels.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForumModels.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
